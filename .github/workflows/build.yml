name: "Build and Deploy Backend" # Я поменял имя, чтобы было понятнее

on:
  push:
    branches:
      - main # Запускается при пуше в main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  SERVICE_NAME: backend
  SERVICE_SCOPE: backend
  DOCKERFILE_PATH: tooling/docker/nest/Dockerfile
  # --- ДОБАВЬТЕ ЭТУ СТРОКУ, ОНА НУЖНА ДЛЯ DOCKERFILE ---
  PRISMA_SCHEMA_PATH: ./apps/backend/prisma/schema.prisma

jobs:
  # --- ВАША ЗАДАЧА СБОРКИ ---
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ${{ env.DOCKERFILE_PATH }}
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:latest
          build-args: |
            APP_NAME=${{ env.SERVICE_NAME }}
            APP_SCOPE=${{ env.SERVICE_SCOPE }}
            # --- И ЭТУ СТРОКУ В BUILD-ARGS ---
            PRISMA_SCHEMA_PATH=${{ env.PRISMA_SCHEMA_PATH }}
            TURBO_TOKEN=
            TURBO_TEAMID=
            TURBO_API=
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # --- НОВАЯ ЗАДАЧА ДЛЯ ДЕПЛОЯ ---
  deploy:
    # Запустится только после успешной сборки
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HETZNER_VPS_HOST }}
          username: ${{ secrets.HETZNER_VPS_USER }}
          key: ${{ secrets.HETZNER_SSH_PRIVATE_KEY }}
          script: |
            cd ~/paritet
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker compose pull
            docker compose up -d
            docker image prune -a -f
