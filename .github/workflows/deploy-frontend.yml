# legal-portal-frontend/.github/workflows/deploy-frontend.yml

name: Legal Portal Frontend CI/CD (Next.js to VPS)

on:
  push:
    branches:
      - main # Запускать этот workflow при каждом пуше в ветку 'main'
  pull_request: # Также запускать при каждом Pull Request для проверки
    branches:
      - main

jobs:
  # ============================================
  # CI (Continuous Integration) Stage
  # ============================================
  ci:
    runs-on: ubuntu-latest # Виртуальная машина, на которой будут выполняться действия

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Используйте LTS-версию Node.js 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run tests (if any)
        run: echo "No automated tests configured yet. Skipping test step."

      - name: Build frontend project
        run: npm run build # Эта команда собирает Next.js в папку .next/ и public/static/

      - name: Archive production build
        # Этот шаг архивирует только то, что нужно для деплоя
        run: |
          mkdir -p artifact-build
          cp -r .next artifact-build/
          cp -r public artifact-build/
          cp package.json package-lock.json next.config.js .env.production artifact-build/ # Копируем нужные файлы

      - name: Upload build artifact
        # Сохраняем артефакт сборки, чтобы он был доступен для job 'deploy'
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: artifact-build/ # Путь к архиву, который мы только что создали

  # ============================================
  # CD (Continuous Deployment) Stage
  # ============================================
  deploy:
    runs-on: ubuntu-latest
    needs: [ci] # Этот job запустится только после успешного завершения job 'ci'
    if: github.ref == 'refs/heads/main' # Развертывать только при пуше в main ветку
    environment: production # Опционально: можно использовать окружения GitHub для безопасности

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: ./ # Скачиваем артефакт в текущую директорию (в папку artifact-build/)

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to VPS via SSH
        run: |
          # Директория на сервере, куда будет деплоиться ваш Next.js проект
          # Измените на фактический путь на вашем VPS
          DEPLOY_PATH="/var/www/legal-portal-frontend"
          APP_PORT="3000" # Порт, на котором будет слушать Next.js

          # Создаем директорию на сервере, если она не существует
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p $DEPLOY_PATH"

          # Копируем файлы из артефакта на сервер
          # rsync -avz --delete ./artifact-build/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:$DEPLOY_PATH/
          # Перейдем в папку с загруженным артефактом, чтобы rsync работал корректно
          cd artifact-build/
          rsync -avz --delete . ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:$DEPLOY_PATH/
          cd .. # Вернуться обратно

          # Выполняем команды на удаленном сервере
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd "$DEPLOY_PATH"

            echo "Installing/Updating production dependencies (if needed)..."
            if [ ! -d "node_modules" ] || [ "$(md5sum package.json | cut -d ' ' -f 1)" != "$(cat .package_json_md5 2>/dev/null)" ]; then
              npm install --production # Установка только production-зависимостей
              md5sum package.json | cut -d ' ' -f 1 > .package_json_md5
            fi

            echo "Restarting Next.js application via PM2..."
            # Убедитесь, что PM2 установлен и настроен на вашем VPS.
            # Замените 'legal-portal-frontend-app' на желаемое имя приложения в PM2.
            # Если это первый запуск, то 'pm2 start', иначе 'pm2 restart'.
            pm2 restart legal-portal-frontend-app || pm2 start npm --name legal-portal-frontend-app -- start

            # Если вы используете Nginx, возможно, нужно его перезапустить,
            # если вы обновляли его конфигурацию (например, новый домен)
            # echo "Restarting Nginx..."
            # sudo systemctl restart nginx

            echo "Deployment to VPS successful!"
          EOF
        env:
          # Переменные окружения, которые нужны для Next.js на сервере
          # Например, для подключения к бэкенду. Добавьте их в GitHub Secrets, если чувствительны.
          NODE_ENV: production
          # Создайте этот секрет в GitHub, если ваш Next.js нуждается в URL бэкенда.
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}