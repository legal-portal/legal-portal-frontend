name: Next.js CI/CD to cPanel (Full Automation)

on:
  push:
    branches:
      - main # Перевірте: main або master? Має бути main

jobs:
  deploy:
    runs-on: ubuntu-latest # Використовуємо віртуальну машину Linux для збірки

    steps:
    - name: Checkout code # 1. Клонуємо ваш репозиторій на віртуальну машину GitHub Actions
      uses: actions/checkout@v4

    - name: Set up Node.js # 2. Встановлюємо Node.js (ту ж версію, що і на cPanel)
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Переконайтеся, що це версія 20

    - name: Install dependencies # 3. Встановлюємо залежності проекту
      run: npm install

    - name: Build Next.js project # 4. Виконуємо БІЛД Next.js (це працює на GitHub Actions!)
      run: npm run build

    - name: Clear remote deployment directory # 5. Очищаємо папку на cPanel перед завантаженням (використовуємо SSH з паролем)
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.FTP_HOST }} # Хост для SSH (може бути той самий, що і для FTP)
        username: ${{ secrets.CPANEL_USERNAME }} # Ваш основний cPanel логін
        password: ${{ secrets.CPANEL_PASSWORD }} # Пароль до вашого cPanel (не FTP-пароль!)
        script: |
          echo "Очищаємо /public_html/portal/.next..."
          rm -rf /home/ohkebsmg/public_html/portal/.next || true
          echo "Очищаємо /public_html/portal/public..."
          rm -rf /home/ohkebsmg/public_html/portal/public || true
          echo "Очищаємо /public_html/portal/node_modules..."
          rm -rf /home/ohkebsmg/public_html/portal/node_modules || true # Додаємо очищення node_modules
          echo "Віддалена директорія деплою очищена."

    # Завантажуємо папку .next/standalone
    - name: Deploy .next/standalone via SFTP # 6. Завантажуємо зібраний серверний білд
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server_directory: /home/ohkebsmg/public_html/portal/.next/ # Зверніть увагу на .next/ в кінці
        local_dir: ./.next/standalone/ # Завантажуємо все з standalone

    # Завантажуємо папку public
    - name: Deploy public/ via SFTP # 7. Завантажуємо статичні файли
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server_directory: /home/ohkebsmg/public_html/portal/ # Завантажуємо в корінь порталу
        local_dir: ./public/

    # Завантажуємо package.json
    - name: Deploy package.json via SFTP # 8. Завантажуємо package.json (потрібен для npm install --production)
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server_directory: /home/ohkebsmg/public_html/portal/
        local_dir: ./package.json

    # НОВИЙ КРОК: Завантажуємо папку node_modules
    - name: Deploy node_modules/ via SFTP
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server_directory: /home/ohkebsmg/public_html/portal/
        local_dir: ./node_modules/ # Завантажуємо папку node_modules

    # --- Зберігаємо Install production dependencies на cPanel на всякий випадок, поки не переконаємось ---
    - name: Install production dependencies on cPanel
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.CPANEL_USERNAME }}
        password: ${{ secrets.CPANEL_PASSWORD }}
        script: |
          source /home/ohkebsmg/nodevenv/public_html/portal/20/bin/activate
          cd /home/ohkebsmg/public_html/portal
          echo "Встановлення production-залежностей на cPanel..."
          # Використання 'npm ci' замість 'npm install --production' для CI-середовищ, якщо є package-lock.json
          npm ci --production || { echo "ПОМИЛКА: npm ci --production завершився з помилкою на cPanel."; exit 1; }
          echo "Production-залежності встановлені."

    - name: Restart Node.js application on cPanel
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.CPANEL_USERNAME }}
        password: ${{ secrets.CPANEL_PASSWORD }}
        script: |
          echo "Перезапуск Node.js додатка на cPanel..."
          /usr/local/bin/ea-nodejs restart-app --path /home/ohkebsmg/public_html/portal/ || { echo "ПОМИЛКА: Не вдалося перезапустити Node.js додаток."; exit 1; }
          echo "Node.js додаток перезапущено. Деплой завершено!"